# GCC 4.4.5 (default)
# GCC 4.5.3
# GCC 4.6.1
# GCC 4.7.0 (20110820)
# Clang 3.0 (SVN) on GCC 4.5.3
# GMP 5.0.2
# MPFR 3.0.1
# zlib 1.2.5
# bzip2 1.0.6
# ICU4C 4.8.1
# OpenSSL 1.0.0d
# OpenMPI 1.4.3
# Boost 1.47.0

project site-config ;

import errors ;
#import mpi ;
import modules ;
import python ;

if ! $(mpi.configured) {
  #errors.error "ERROR: MPI is not configured." ;
}

if ! $(python.configure) {
  #errors.error "ERROR: Python is not configured." ;
}

local home = [ modules.peek : HOME ] ;

# Modify the following lines.
local prefix = "$(home)/local" ;
local gcc-builtin = 4.4.5 ;
local gcc-current = 4.6.2 ;
local gcc-previous = 4.5.3 ;
local gcc-oldest = 4.4.6 ;
local gcc-snapshot = 4.7.0 ;
local clang-gcc-version = $(gcc-current) ;


alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) ;
alias gcc_s : : <toolset>clang <runtime-link>static                   : : <library-path>"$(prefix)/$(clang-gcc-version)/lib"   ;
alias gcc_s : : <toolset>clang <runtime-link>static <address-model>32 : : <library-path>"$(prefix)/$(clang-gcc-version)/lib32" ;
alias gcc_s : : <toolset>clang <runtime-link>static <address-model>64 : : <library-path>"$(prefix)/$(clang-gcc-version)/lib64" ;
alias gcc_s : : <toolset>clang <runtime-link>shared                   : : <library-path>"$(prefix)/$(clang-gcc-version)/lib"   <xdll-path>"$(prefix)/$(clang-gcc-version)/lib"   ;
alias gcc_s : : <toolset>clang <runtime-link>shared <address-model>32 : : <library-path>"$(prefix)/$(clang-gcc-version)/lib32" <xdll-path>"$(prefix)/$(clang-gcc-version)/lib32" ;
alias gcc_s : : <toolset>clang <runtime-link>shared <address-model>64 : : <library-path>"$(prefix)/$(clang-gcc-version)/lib64" <xdll-path>"$(prefix)/$(clang-gcc-version)/lib64" ;

alias stdc++ : gcc_s : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) ;
alias stdc++ : gcc_s : <toolset>clang <runtime-link>static                              : : <library-path>"$(prefix)/$(clang-gcc-version)/lib"   ;
alias stdc++ : gcc_s : <toolset>clang <runtime-link>static <address-model>32            : : <library-path>"$(prefix)/$(clang-gcc-version)/lib32" ;
alias stdc++ : gcc_s : <toolset>clang <runtime-link>static <address-model>64            : : <library-path>"$(prefix)/$(clang-gcc-version)/lib64" ;
alias stdc++ :       : <toolset>clang <runtime-link>shared                   <use>gcc_s : : <library-path>"$(prefix)/$(clang-gcc-version)/lib"   <xdll-path>"$(prefix)/$(clang-gcc-version)/lib"   ;
alias stdc++ :       : <toolset>clang <runtime-link>shared <address-model>32 <use>gcc_s : : <library-path>"$(prefix)/$(clang-gcc-version)/lib32" <xdll-path>"$(prefix)/$(clang-gcc-version)/lib32" ;
alias stdc++ :       : <toolset>clang <runtime-link>shared <address-model>64 <use>gcc_s : : <library-path>"$(prefix)/$(clang-gcc-version)/lib64" <xdll-path>"$(prefix)/$(clang-gcc-version)/lib64" ;

# -For default GCC and Clang.
# -32bit version is not available.
# -Static version is avaiable on GCC.
# -Does not depend on the C++ runtimes (libgcc_s and libstdc++).
# -Static version is not available on Clang because of Boost.Build v2 bugs.
local rule declare ( target-name : sources * : lib-name )
{
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>static                   <name>$(lib-name) ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>static <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>static <address-model>64 <name>$(lib-name) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared                   <name>$(lib-name) <use>$(sources) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared <address-model>64 <name>$(lib-name) <use>$(sources) ;

  lib $(target-name) : $(sources) : <toolset>clang <link>static                   <name>static_version_of_$(lib-name)_is_not_available_on_clang_because_of_bbv2_bug ;
  lib $(target-name) :            : <toolset>clang <link>shared                   <name>$(lib-name) <search>"$(prefix)/$(clang-gcc-version)/lib"   <use>$(sources) ;
  lib $(target-name) :            : <toolset>clang <link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) :            : <toolset>clang <link>shared <address-model>64 <name>$(lib-name) <search>"$(prefix)/$(clang-gcc-version)/lib64" <use>$(sources) ;
}

declare gmp  :     : gmp  ;
declare mpfr : gmp : mpfr ;
declare z    :     : z    ;
declare bz2  :     : bz2  ;

# -For default GCC and Clang.
# -32bit version is not available.
# -Static version is not available on GCC.
# -Depends on the C++ runtimes (libgcc_s and libstdc++).
# -Static version is not available on Clang because of Boost.Build v2 bugs.
local rule declare2 ( target-name : sources * : lib-name )
{
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>static                                        <name>static_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared <runtime-link>shared                   <name>$(lib-name) <use>$(sources) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared <runtime-link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available  ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-builtin) <link>shared <runtime-link>shared <address-model>64 <name>$(lib-name) <use>$(sources) ;

  lib $(target-name) : $(sources) : <toolset>clang <link>static                                        <name>static_version_of_$(lib-name)_is_not_available_because_of_bbv2_bug ;
  lib $(target-name) :            : <toolset>clang <link>shared <runtime-link>shared                   <name>$(lib-name) <search>"$(prefix)/$(clang-gcc-version)/lib"   <use>$(sources) ;
  lib $(target-name) :            : <toolset>clang <link>shared <runtime-link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available  ;
  lib $(target-name) :            : <toolset>clang <link>shared <runtime-link>shared <address-model>64 <name>$(lib-name) <search>"$(prefix)/$(clang-gcc-version)/lib64" <use>$(sources) ;
}

declare2 icudt :                          : icudata ;
declare2 icuuc : stdc++ icudt             : icuuc   ;
declare2 icuin : stdc++ icudt icuuc       : icui18n ;
declare2 icuio : stdc++ icudt icuuc       : icuio   ;
declare2 icule : stdc++ icudt icuuc       : icule   ;
declare2 iculx : stdc++ icudt icuuc icule : iculx   ;
declare2 icutu : stdc++ icudt icuuc icuin : icutu   ;

declare crypto :        : crypto ;
declare ssl    : crypto : ssl    ;


local rule declare4 ( target-name : sources * : gcc-version : lib-name )
{
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static                   <name>$(lib-name) ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static <address-model>64 <name>$(lib-name) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared                   <name>$(lib-name) <search>"$(prefix)/$(gcc-version)/lib"   <use>$(sources) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared <address-model>64 <name>$(lib-name) <search>"$(prefix)/$(gcc-version)/lib64" <use>$(sources) ;
}

local rule declare5 ( target-name : sources * : gcc-version : lib-name )
{
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static <runtime-link>shared                   <name>$(lib-name) ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static <runtime-link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) : $(sources) : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>static <runtime-link>shared <address-model>64 <name>$(lib-name) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared <runtime-link>shared                   <name>$(lib-name) <search>"$(prefix)/$(gcc-version)/lib"   <use>$(sources) ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared <runtime-link>shared <address-model>32 <name>32bit_version_of_$(lib-name)_is_not_available ;
  lib $(target-name) :            : <toolset>gcc <toolset-gcc:version>$(gcc-version) <link>shared <runtime-link>shared <address-model>64 <name>$(lib-name) <search>"$(prefix)/$(gcc-version)/lib64" <use>$(sources) ;
}

for local gcc-version in $(gcc-current) $(gcc-previous) $(gcc-oldest) $(gcc-snapshot) {
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static                   ;
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static <address-model>32 ;
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static <address-model>64 ;
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared                   : : <xdll-path>"$(prefix)/$(gcc-version)/lib"   ;
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared <address-model>32 : : <xdll-path>"$(prefix)/$(gcc-version)/lib32" ;
  alias gcc_s : : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared <address-model>64 : : <xdll-path>"$(prefix)/$(gcc-version)/lib64" ;

  alias stdc++ : gcc_s : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static                   ;
  alias stdc++ : gcc_s : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static <address-model>32 ;
  alias stdc++ : gcc_s : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>static <address-model>64 ;
  alias stdc++ :       : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared                   <use>gcc_s : : <xdll-path>"$(prefix)/$(gcc-version)/lib"   ;
  alias stdc++ :       : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared <address-model>32 <use>gcc_s : : <xdll-path>"$(prefix)/$(gcc-version)/lib32" ;
  alias stdc++ :       : <toolset>gcc <toolset-gcc:version>$(gcc-version) <runtime-link>shared <address-model>64 <use>gcc_s : : <xdll-path>"$(prefix)/$(gcc-version)/lib64" ;

  declare4 gmp  :     : $(gcc-version) : gmp  ;
  declare4 mpfr : gmp : $(gcc-version) : mpfr ;
  declare4 z    :     : $(gcc-version) : z    ;
  declare4 bz2  :     : $(gcc-version) : bz2  ;

  declare5 icudt :                          : $(gcc-version) : icudata ;
  declare5 icuuc : stdc++ icudt             : $(gcc-version) : icuuc   ;
  declare5 icuin : stdc++ icudt icuuc       : $(gcc-version) : icui18n ;
  declare5 icuio : stdc++ icudt icuuc icuin : $(gcc-version) : icuio   ;
  declare5 icule : stdc++ icudt icuuc       : $(gcc-version) : icule   ;
  declare5 iculx : stdc++ icudt icuuc icule : $(gcc-version) : iculx   ;
  declare5 icutu : stdc++ icudt icuuc icuin : $(gcc-version) : icutu   ;

  declare4 crypto :        : $(gcc-version) : crypto ;
  declare4 ssl    : crypto : $(gcc-version) : ssl    ;
}

alias boost_headers : /boost//headers ;

for local lib-name in date_time exception math_c99 math_c99f math_c99l math_tr1 math_tr1f math_tr1l prg_exec_monitor program_options random serialization signals test_exec_monitor unit_test_framework
{
  alias boost_$(lib-name)
    : /boost//$(lib-name)
    : <use>boost_headers
      <use>stdc++
    :
    : <link>static:<library>stdc++
      <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
    ;
}

alias boost_chrono
  : /boost//chrono
  : <use>boost_headers
    <use>stdc++
    <use>boost_system
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_system
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_filesystem
  : /boost//filesystem
  : <use>boost_headers
    <use>stdc++
    <use>boost_system
  :
  : <define>BOOST_FILESYSTEM_NO_DEPRECATED
    <link>static:<library>stdc++
    <link>static:<library>boost_system
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_graph
  : /boost//graph
  : <use>boost_headers
    <use>stdc++
    <use>boost_regex
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_regex
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_graph_parallel
  : /boost//graph_parallel
  : <use>boost_headers
    <use>stdc++
    <use>boost_mpi
    <use>boost_serialization
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_mpi
    <link>static:<library>boost_serialization
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_iostreams
  : /boost//iostreams
  : <use>boost_headers
    <use>stdc++
    <use>z
    <use>bz2
  :
  : <link>static:<library>stdc++
    <link>static:<library>z
    <link>static:<library>bz2
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_mpi
  : /boost//mpi
  : <use>boost_headers
    <use>stdc++
    <use>/mpi//mpi
    <use>boost_serialization
  :
  : <link>static:<library>stdc++
    <library>/mpi//mpi
    <link>static:<library>boost_serialization
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_python
  : /boost//python
  : <use>boost_headers
    <use>stdc++
    <use>/python//python
  :
  : <link>static:<library>stdc++
    <library>/python//python
  ;

alias boost_regex
  : /boost//regex
  : <use>boost_headers
    <use>stdc++
    <use>icudt
    <use>icuuc
    <use>icuin
  :
  : <link>static:<library>stdc++
    <link>static:<library>icudt
    <link>static:<library>icuuc
    <link>static:<library>icuin
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_system
  : /boost//system
  : <use>boost_headers
    <use>stdc++
  :
  : <define>BOOST_SYSTEM_NO_DEPRECATED
    <link>static:<library>stdc++
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_thread
  : /boost//thread
  : <use>boost_headers
    <use>stdc++
    <use>boost_system
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_system
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_wave
  : /boost//wave
  : <use>boost_headers
    <use>stdc++
    <use>boost_date_time
    <use>boost_filesystem
    <use>boost_system
    <use>boost_thread
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_date_time
    <link>static:<library>boost_filesystem
    <link>static:<library>boost_system
    <link>static:<library>boost_thread
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;

alias boost_wserialization
  : /boost//wserialization
  : <use>boost_headers
    <use>stdc++
    <use>boost_serialization
  :
  : <link>static:<library>stdc++
    <link>static:<library>boost_serialization
    <link>shared:<xdll-path>"$(prefix)/boost/latest/stage/lib"
  ;
