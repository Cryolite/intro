#!/usr/bin/env sh

bindir=`(cd \`dirname "$0"\`; pwd)`

bits=0
is_link=0

if [ ! -x "$bindir/gcc" ]; then
  echo "$0: error: \`$bindir/gcc': not found" 1>&2
  exit 1
fi

dryrun=`"$bindir/gcc" -### "$@" 2>&1`

cc1_cl=`echo "$dryrun" | grep -F \`"$bindir/gcc" -print-prog-name=cc1\``
if [ -n "$cc1_cl" ]; then
    if echo "$cc1_cl" | grep -Eq '[[:space:]]-m32[[:space:]]'; then
        if [ $bits -eq 64 ]; then
            echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
            exit 1
        fi
        bits=32
    fi
    if echo "$cc1_cl" | grep -Evq '[[:space:]]-m32[[:space:]]'; then
        if [ $bits -eq 32 ]; then
            echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
            exit 1
        fi
        bits=64
    fi
fi

as_cl=`echo "$dryrun" | grep -F \`"$bindir/gcc" -print-prog-name=as\``
if echo "$as_cl" | grep -Eq '[[:space:]]--64[[:space:]]'; then
    if [ $bits -eq 32 ]; then
        echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
        exit 1
    fi
    bits=64
fi
if echo "$as_cl" | grep -Eq '[[:space:]]--32[[:space:]]'; then
    if [ $bits -eq 64 ]; then
        echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
        exit 1
    fi
    bits=32
fi

collect2_cl=`echo "$dryrun" | grep -F \`"$bindir/gcc" -print-prog-name=collect2\``
if echo "$collect2_cl" | grep -Eq '[[:space:]]-m[[:space:]]+elf_x86_64[[:space:]]'; then
    if [ $bits -eq 32 ]; then
        echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
        exit 1
    fi
    bits=64
    is_link=1
fi
if echo "$collect2_cl" | grep -Eq '[[:space:]]-m[[:space:]]+elf_i386[[:space:]]'; then
    if [ $bits -eq 64 ]; then
        echo "$0: error: failed to detect whether the target is 64-bit or 32-bit" 1>&2
        exit 1
    fi
    bits=32
    is_link=1
fi

if false; then
    mkdir -p "$HOME/tmp"
    if [ $is_link -eq 0 ]; then
        echo "$@" > "$HOME/tmp/cc-compile.$$.log"
    elif [ $is_link -eq 1 ]; then
        echo "$@" > "$HOME/tmp/cc-link.$$.log"
    else
        echo "$0: error: an internal error" 1>&2
        exit 1
    fi
fi

if [ $is_link -eq 0 ]; then
    exec "$bindir/gcc" "$@"
fi

if [ $is_link -ne 1 ]; then
    echo "$0: error: an internal error" 1>&2
    exit 1
fi

if [ $bits -eq 0 ]; then
    echo "$0: error: an internal error" 1>&2
    exit 1
fi

if [ -f '/etc/debian_version' ] && grep -Fq 'wheezy/sid' '/etc/debian_version'; then
    if [ $bits -eq 64 ]; then
        LIBRARY_PATH="${LIBRARY_PATH:+${LIBRARY_PATH}:}/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu"
        export LIBRARY_PATH
        debian_multiarch_workaround_link_options="-Wl,-rpath-link=/usr/lib/x86_64-linux-gnu -Wl,-rpath-link=/lib/x86_64-linux-gnu"
    elif [ $bits -eq 32 ]; then
        :
    else
        echo "$0: error: an internal error" 1>&2
        exit 1
    fi
fi

prefix=`dirname "$bindir"`

if [ $bits -eq 64 ]; then
    exec "$bindir/gcc" "$@" -Wl,"-rpath=$prefix/lib64" -Wl,"-rpath=$prefix/lib" $debian_multiarch_workaround_link_options -Wl,--enable-new-dtags
elif [ $bits -eq 32 ]; then
    exec "$bindir/gcc" "$@" -Wl,"-rpath=$prefix/lib32" -Wl,"-rpath=$prefix/lib" -Wl,--enable-new-dtags
else
    echo "$0: error: an internal error" 1>&2
    exit 1
fi
