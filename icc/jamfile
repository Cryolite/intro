project intro/icc ;

import alias ;
import errors ;
import feature ;
import make ;
import path ;
import "$(INTRO_ROOT_DIR)/compilers"
  : is-icc
    get-default-bindir
    get-property-dump-commands
  ;


rule compiler-dep-req ( properties * )
{
  local compiler = [ feature.get-values <compiler-hidden> : $(properties) ] ;
  local result ;
  if [ is-icc "$(compiler)" ] {
    result += "<source>../gcc//install" ;
  }
  else {
    errors.error "an internal error." ;
  }
  return $(result) ;
}

alias compiler-dep : : <conditional>@compiler-dep-req ;
explicit compiler-dep ;



rule location-conditional ( properties * )
{
  local bindir = [ get-default-bindir "$(PREFIX)" : $(properties) ] ;
  return "<location>$(bindir)" ;
}

make icpc-wrapper
  : compiler-dep
  : @make-install
  : $(USE_COMPILER)
    $(USE_MULTITARGET)
    <conditional>@location-conditional
  ;
explicit icpc-wrapper ;

rule make-install ( targets * : sources * : properties * )
{
  PROPERTY_DUMP_COMMANDS on $(targets) = [ get-property-dump-commands $(properties) ] ;
}
actions make-install
{
  bash -s << 'EOS'
  exec >> '$(STDOUT_)' 2>> '$(STDERR_)'
$(PROPERTY_DUMP_COMMANDS)
  LINENO_ADJ=`grep -Fn f45f28c9-942e-4c65-913c-b6c2b62a636e '$(INTRO_ROOT_DIR)/icc/jamfile' | grep -Eo '^[[:digit:]]+'`
  LINENO_ADJ=`expr $LINENO_ADJ - $LINENO + 1`
  PS4='+icc/jamfile:`expr $LINENO + $LINENO_ADJ`: '
  set -ex

  rm '$(<:D)/icc-wrapper' '$(<:D)/icpc-wrapper'

  trap "rm '$(<:D)/icc-wrapper' '$(<:D)/icpc-wrapper'" ERR HUP INT QUIT TERM

  install --mode=755 '$(INTRO_ROOT_DIR)/template/x86_64-unknown-linux-gnu/icc-wrapper' '$(<:D)'

  install --mode=755 '$(INTRO_ROOT_DIR)/template/x86_64-unknown-linux-gnu/icpc-wrapper' '$(<:D)'

  [ -f '$(<)' ]
EOS
}



alias install : "icpc-wrapper/$(DEFAULT_COMPILER_PROPERTIES)" ;
explicit install ;
